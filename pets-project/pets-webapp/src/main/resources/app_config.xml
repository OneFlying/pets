<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2010 The myBatis Team Licensed under the Apache License, Version
	2.0 (the "License"); you may not use this file except in compliance with
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software distributed
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for
	the specific language governing permissions and limitations under the License. -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"  xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/cache
     http://www.springframework.org/schema/cache/spring-cache.xsd">

    <bean id="dataSource_local" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="maxActive" value="50" />
        <property name="minIdle" value="5" />
        <property name="maxIdle" value="10" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000"/>
        <property name="testOnBorrow" value="true" />
        <property name="validationQuery" value="select 1" />
        <property name="url"
                  value="jdbc:mysql://${db.host}:${db.port}/${db.database}?useUnicode=true&amp;autoReconnect=true&amp;rewriteBatchedStatements=TRUE" />
        <property name="username">
            <value>${db.user}</value>
        </property>
        <property name="password">
            <value>${db.password}</value>
        </property>
    </bean>


    <bean id="petsJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource_local" />
    </bean>


    <!-- enable component scanning (beware that this does not enable mapper
        scanning!) <context:component-scan base-package="org.mybatis.jpetstore.service"
        /> -->

    <!-- enable autowire -->
    <context:annotation-config />
    <context:component-scan base-package="com.guo" />
    <!--<cache:annotation-driven />-->

    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_local" />
        <!-- <property name="typeAliasesPackage" value="com.baiji.fmc.core.domain" /> -->

        <!-- <property name="configLocation" value="classpath:mybatis_config.xml"/> -->
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.guo.pets.dao" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>


    <!-- spring 事务支持 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource_local" />
    </bean>

    <!-- aop + tx -->
    <tx:advice id="defaultTransactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="query*" read-only="true" />
            <tx:method name="list*" read-only="true" />
            <tx:method name="search*" read-only="true" />
            <tx:method name="get*" read-only="true" />
            <tx:method name="count*" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="allServiceMethods" expression="execution(* com.guo.*.service.*.*(..))" />
        <aop:advisor advice-ref="defaultTransactionAdvice" pointcut-ref="allServiceMethods" />
    </aop:config>

    <!-- ehcache缓存 -->
    <bean id="defaultCacheManager"
          class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
          scope="singleton">
        <property name="configLocation">
            <value>classpath:ehcache.xml</value>
        </property>
    </bean>


    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager"  ref="defaultCacheManager"/>
    </bean>


    <bean id="GENERAL" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager"  ref="defaultCacheManager" />
        <property name="cacheName">
            <value>GENERAL</value>
        </property>
    </bean>

    <bean id="GENERALSHORT" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager"  ref="defaultCacheManager" />
        <property name="cacheName">
            <value>GENERALSHORT</value>
        </property>
    </bean>


    <bean id="GENERALLONG" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager"  ref="defaultCacheManager" />
        <property name="cacheName">
            <value>GENERALLONG</value>
        </property>
    </bean>

    <bean id="PAGE" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager"  ref="defaultCacheManager" />
        <property name="cacheName">
            <value>PAGE</value>
        </property>
    </bean>



    <!--<bean id="fileStore" class="com.badu.bdsaas.filestore.store.SftpFileStore" scope="prototype"/>-->
    <!--&lt;!&ndash; 配置kaptcha验证码 &ndash;&gt;-->
    <!--<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">-->
        <!--<property name="config">-->
            <!--<bean class="com.google.code.kaptcha.util.Config">-->
                <!--<constructor-arg type="java.util.Properties">-->
                    <!--<props>-->
                        <!--<prop key="kaptcha.image.width">90</prop>-->
                        <!--<prop key="kaptcha.image.height">40</prop>-->
                        <!--<prop key="kaptcha.border">no</prop>-->
                        <!--<prop key="kaptcha.textproducer.font.color">30,144,255</prop>-->
                        <!--<prop key="kaptcha.textproducer.font.size">26</prop>-->
                        <!--<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>-->
                        <!--<prop key="kaptcha.textproducer.char.string">0123456789abcdefghijklmnopqrstuvwxyz</prop>-->
                        <!--<prop key="kaptcha.textproducer.char.length">4</prop>-->
                    <!--</props>-->
                <!--</constructor-arg>-->
            <!--</bean>-->
        <!--</property>-->
    <!--</bean>-->
    <!--&lt;!&ndash; 配置kaptcha验证码 &ndash;&gt;-->
    <!--<bean id="captchaProducerMobile" class="com.google.code.kaptcha.impl.DefaultKaptcha">-->
        <!--<property name="config">-->
            <!--<bean class="com.google.code.kaptcha.util.Config">-->
                <!--<constructor-arg type="java.util.Properties">-->
                    <!--<props>-->
                        <!--<prop key="kaptcha.image.width">350</prop>-->
                        <!--<prop key="kaptcha.image.height">87</prop>-->
                        <!--<prop key="kaptcha.border">no</prop>-->
                        <!--<prop key="kaptcha.textproducer.font.color">7,175,250</prop>-->
                        <!--<prop key="kaptcha.textproducer.char.space">10</prop>-->
                        <!--<prop key="kaptcha.textproducer.font.size">84</prop>-->
                        <!--<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.DefaultNoise</prop>-->
                        <!--<prop key="kaptcha.noise.color">7,175,250</prop>-->
                        <!--<prop key="kaptcha.textproducer.char.string">0123456789abcdefghijklmnopqrstuvwxyz</prop>-->
                        <!--<prop key="kaptcha.textproducer.char.length">4</prop>-->
                        <!--<prop key="kaptcha.background.impl">com.google.code.kaptcha.impl.DefaultBackground</prop>-->
                        <!--<prop key="kaptcha.background.clear.from">white</prop>-->
                        <!--<prop key="kaptcha.background.clear.to">white</prop>-->
                    <!--</props>-->
                <!--</constructor-arg>-->
            <!--</bean>-->
        <!--</property>-->
    <!--</bean>-->
</beans>
